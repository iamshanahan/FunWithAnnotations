/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package funWithAnnotations;

import funWithAnnotations.targeted.GenericAnnotation;

//@GenericAnnotation(someInt = 4, someStrings = { "overriding string" })
public class SomeChildClass extends SomeParentClass {

	// @GenericAnnotation
	public SomeChildClass(@GenericAnnotation String fieldIn) {
		super(fieldIn);
	}

	/**
	 * @deprecated to test deprecation behavior
	 * @return
	 */
	@Deprecated
	public String getField() {
		return field;
	}

	@Override
	// @GenericAnnotation(someInt = 3)
	public String someLibraryMethod(@GenericAnnotation String parameter) {
		return "field : param " + getField() + " : " + parameter;
	}

	// @Override // causes compile error
	// @GenericAnnotation(someStrings = { "string 1", "string 2" })
	public static void main(String[] args) {
		SomeChildClass objectOfThisClass = new SomeChildClass("const field");
		System.out.println("Printing to stdout '" + objectOfThisClass.someLibraryMethod("passed value") + "'");
	}
}
